name: Test & Release

on:
  push:
    tags:
      - "v*"

jobs:
  test-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9

      - name: Use the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Restore cached Clojure dependencies
        id: clj-cache-restore
        uses: actions/cache/restore@v3
        with:
          key: clj-${{ github.repository }}-${{ hashFiles('**/deps.edn') }}
          restore-keys: clj-${{ github.repository }}-
          path: |
            ~/.gitlibs
            ~/.m2/repository

      - name: Pull Clojure dependencies
        if: steps.clj-cache-restore.outputs.cache-hit != 'true'
        run: |
          nix develop -c clojure -P
          nix develop -c clojure -A:build -P
          nix develop -c clojure -A:test -P

      - name: Save cached Clojure dependencies
        if: steps.clj-cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          key: clj-${{ github.repository }}-${{ hashFiles('**/deps.edn') }}
          path: |
            ~/.gitlibs
            ~/.m2/repository

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-east-1
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          mask-aws-account-id: no

      - name: Run tests and build jar
        run: nix develop -c clojure -T:build ci :snapshot false

      - name: Deploy release jar
        run: nix develop -c clojure -T:build deploy :snapshot false
        env:
          CLOJARS_PASSWORD: ${{secrets.CLOJARS_PASSWORD}}
          CLOJARS_USERNAME: ${{secrets.CLOJARS_USERNAME}}
